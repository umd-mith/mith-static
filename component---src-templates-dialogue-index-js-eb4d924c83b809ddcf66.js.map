{"version":3,"file":"component---src-templates-dialogue-index-js-eb4d924c83b809ddcf66.js","mappings":"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","sources":["webpack://mith-static/./src/components/paginator.js","webpack://mith-static/./src/templates/dialogue-index.js"],"sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nimport './paginator.css'\n\nconst Paginator = ({count, path}) => {\n  return(\n    <section className=\"pagination-wrap\">\n      <ul className=\"pagination\">\n        {Array.from({ length: count }, (_, i) => (\n          <li className=\"page-link\" key={`pa${i}`}>\n            <Link\n              activeClassName=\"active\" \n              className=\"page-link\"\n              key={`pagination-number${i + 1}`}\n              to={`/${path}/${i === 0 ? \"\" : i + 1}`}>\n              {i + 1}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Paginator;","import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Paginator from '../components/paginator'\nimport SEO from '../components/seo'\nimport EventTime from '../components/event-time'\nimport Person from '../components/person'\n\nimport './event-index.css'\n\nconst Entry = ({item, headshots}) => {\n  const slug = '/digital-dialogues/' + item.id + '/'\n            \n  const event_title = item.event_title\n  const talk_title = item.talk_title\n  const title_text = talk_title ? talk_title : event_title\n  const title = item.talk_subtitle\n  ? <h2 className=\"title\">\n      <Link to={slug}>{title_text}<span className=\"subtitle\">{item.talk_subtitle}</span></Link>\n    </h2>\n  : <h2 className=\"title\">\n      <Link to={slug}>{title_text}</Link>\n    </h2>\n\n  const location = item.location ? <div className=\"location\">{item.location}</div> : ''\n\n  let speakers_list = null\n  let speakers = null\n  const speakers_data = item.speakers ? item.speakers : []\n  if (speakers_data.length > 0) {\n    speakers_list = speakers_data.map((p, i) => {\n      // find headshot                \n      p.data.headshot = headshots[p.data.slug]\n      return <Person key={`p${i}`} person={p.data} type=\"dialogue-index\" />\n    })\n    speakers = <div className=\"speakers\">{speakers_list}</div>\n  }\n\n  return (\n    <article className=\"post dialogue event\" id={item.id.toLowerCase().replace(/-/g, '_')} key={`dialogue-${item.id}`}>\n      {title}\n      <div className=\"meta\">\n        {speakers}\n        {location}\n        <EventTime start={item.start} />\n      </div>\n    </article>\n  )\n\n}\n\n\nconst DialogueIndex = ({data, pageContext}) => {\n  const items = data.allAirtableEvents.nodes\n  const pageCount = data.allAirtableEvents.pageInfo.pageCount\n  const headshots = pageContext.headshots\n\n  // Arrange items in the future into reverse order.\n  const sortedItems = items.reduce((acc, item) => {\n    const date = new Date(item.data.start)\n    if (date > new Date()) {\n      acc.future.unshift(item)\n    } else {\n      acc.past.push(item)\n    }\n    return acc\n  }, {future:[], past: []})\n\n  return (\n    <Layout>\n      <SEO title=\"MITH Digital Dialogues\" />\n      <div className=\"page-dialogues\">\n        <section className=\"posts dialogues events\">\n          <h1 className=\"page-title\">Digital Dialogues</h1>\n          <p>\n            Digital Dialogues convenes prominent digital humanities, new media, and information technology practitioners \n            to present their field-defining research. The series, which celebrated its 40th season in Spring 2024, \n            invites intellectual exchange around topics critical to the digital humanities. \n            Follow us on social media (<a href=\"https://twitter.com/UMD_MITH\">@umd_mith</a> on X/Twitter and\n            <a href=\"https://www.instagram.com/mith_umd\">@mith_umd</a> on Instagram) for more details.\n          </p>\n          {sortedItems.future.map(item => <Entry item={item.data} headshots={headshots} key={item.id} />)}\n          <h2 className=\"page-title\">Past Digital Dialogues</h2>\n          {sortedItems.past.map(item => <Entry item={item.data} headshots={headshots} key={item.id} />)}\n        </section>\n        <Paginator count={pageCount} path=\"digital-dialogues\" />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query DialoguesQuery($skip: Int!, $limit: Int!) {\n    allAirtableEvents(\n      limit: $limit\n      skip: $skip\n      filter: {data: {event_type: {eq: \"Digital Dialogue\"}}}\n      sort: {data: {start_date: DESC}}\n    ) {\n      nodes {\n        data {\n          id\n          event_title\n          talk_title\n          talk_subtitle\n          type: event_type\n          start: start_date\n          end: end_date\n          location\n          speakers {\n            data {\n              name\n              slug\n              new_id\n              group_type\n            }\n          }\n          speaker_affiliations {\n            data {\n              department\n              institution\n              title\n            }\n          }\n        }\n      }\n      pageInfo {\n        pageCount\n      }\n    }\n  }\n`\n \nexport default DialogueIndex\n"],"names":["_ref","count","path","React","className","Array","from","length","_","i","key","Link","activeClassName","to","Entry","item","headshots","slug","id","event_title","talk_title","title_text","title","talk_subtitle","location","speakers_list","speakers","speakers_data","map","p","data","headshot","Person","person","type","toLowerCase","replace","EventTime","start","_ref2","pageContext","items","allAirtableEvents","nodes","pageCount","pageInfo","sortedItems","reduce","acc","Date","future","unshift","past","push","Layout","SEO","href","Paginator"],"sourceRoot":""}