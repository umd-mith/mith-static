{"version":3,"file":"component---src-templates-dialogue-tsx-814a8c59f8715cd38c10.js","mappings":"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","sources":["webpack://mith-static/./src/components/person.tsx","webpack://mith-static/./src/components/supporter-list.tsx","webpack://mith-static/./src/templates/dialogue.tsx"],"sourcesContent":["import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport type { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nexport type PersonComponentProps = {\n  group_type: string\n  slug: string\n  new_id: string\n  name: string\n  affiliations: {\n    data: {\n      start: number\n      end: number\n      title: string\n      department: string\n      institution: string\n    }\n  }[]\n  twitter: string\n  website: string\n  bio: {\n    childMarkdownRemark: { html: string }\n  }\n  headshot: {\n    localFiles: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      url: string\n    }[]\n  }\n}\n\ninterface PersonProps {\n  person: PersonComponentProps\n  type: string\n}\n\nconst Person = ({ person, type }: PersonProps) => {\n  let pageLocation = null\n  const isStaff = person.group_type && person.group_type.includes(\"Staff\")\n  if (isStaff) {\n    pageLocation = person.slug ? person.slug : null\n  }\n  let person_name = pageLocation ? ( // link current staff names to profile\n    <Link\n      className=\"name\"\n      id={person.new_id}\n      key={`p-${person.new_id}`}\n      to={`../../people/${pageLocation}`}\n      aria-label={`View ${person.name}'s Profile`}\n      title={`View ${person.name}'s Profile`}\n    >\n      {person.name}\n    </Link>\n  ) : (\n    <div className=\"name\" id={person.new_id}>\n      {person.name}\n    </div>\n  )\n\n  let date_span = null\n  if (type === \"director\") {\n    const _aff = person.affiliations\n    if (_aff && _aff[0]) {\n      const aff = _aff[0].data\n      const start = aff.start ? (\n        <span className=\"start\">{aff.start}</span>\n      ) : null\n      const end = aff.end ? <span className=\"end\">{aff.end}</span> : null\n      if (aff.start && aff.end) {\n        date_span = (\n          <div className=\"date-span\">\n            ({start} &ndash; {end})\n          </div>\n        )\n      }\n      if (aff.start && !aff.end) {\n        const end = isStaff ? (\n          <>\n            {\" \"}\n            &ndash; <span className=\"end\">present</span>\n          </>\n        ) : null\n        date_span = (\n          <div className=\"date-span\">\n            ({start}\n            {end})\n          </div>\n        )\n      }\n    }\n  }\n\n  let affiliations: JSX.Element[] | undefined\n  if (person.affiliations) {\n    affiliations = person.affiliations.map(_aff => {\n      const aff = _aff.data\n      let person_title = null\n      let person_institution = null\n      let person_dept = null\n      if (!isStaff) {\n        // hide titles for current staff\n        if (\n          type === \"speaker\" ||\n          type === \"dialogue\" ||\n          type === \"participant\" ||\n          type === \"director\"\n        ) {\n          person_title = aff.title ? (\n            <span className=\"title\">{aff.title}</span>\n          ) : null\n          person_dept = aff.department ? (\n            <span className=\"dept\">{aff.department}</span>\n          ) : null\n          person_institution = aff.institution ? (\n            <span className=\"institution\">{aff.institution}</span>\n          ) : null\n        }\n        if (type === \"dialogue-index\") {\n          person_institution = aff.institution ? (\n            <span className=\"institution\">{aff.institution}</span>\n          ) : null\n        }\n      }\n      return (\n        <Fragment key={aff.title}>\n          {person_title}\n          {person_dept}\n          {person_institution}\n        </Fragment>\n      )\n    })\n  }\n\n  let twitter = null\n  let headshot = null\n  let website = null\n  let hasImg = \"\"\n  if (type === \"speaker\" || type === \"dialogue\" || type === \"dialogue-index\") {\n    const iconTwitter = <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n    twitter = person.twitter ? (\n      <a\n        href={`https://twitter.com/${person.twitter}`}\n        className=\"twitter\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {iconTwitter} {person.twitter}\n      </a>\n    ) : null\n    if (person.headshot) {\n      const headshotData = person.headshot.localFiles[0]\n      if (headshotData.childImageSharp) {\n        headshot = (\n          <GatsbyImage\n            image={headshotData.childImageSharp.gatsbyImageData}\n            alt={person.name}\n            className=\"headshot\"\n          />\n        )\n      } else {\n        headshot = (\n          <img\n            src={headshotData.url}\n            alt={`Headshot of ${person.name}`}\n            className=\"headshot\"\n            style={{\n              objectFit: \"cover\",\n            }}\n          />\n        )\n      }\n      hasImg = \"has-headshot\"\n    }\n  }\n  const bio_link =\n    person.bio && person.bio.childMarkdownRemark ? (\n      <a href={`#${person.slug}`} className=\"bio-link\">\n        Read Bio\n      </a>\n    ) : null\n\n  const person_bio =\n    person.bio && person.bio.childMarkdownRemark ? (\n      <div\n        className=\"bio\"\n        dangerouslySetInnerHTML={{\n          __html: person.bio.childMarkdownRemark.html,\n        }}\n      />\n    ) : (\n      \"\"\n    )\n\n  if (person.website) {\n    const website_url = person.website.startsWith(\"http\")\n      ? person.website\n      : `http://${person.website}`\n    website = (\n      <a href={website_url} target=\"_blank\" rel=\"noreferrer\">\n        Website\n      </a>\n    )\n  }\n\n  if (type === \"dialogue-index\") {\n    // TODO: default typing for itemScope is boolean | undefined, which is incorrect.\n    return (\n      <div\n        className={`speaker person ${hasImg}`}\n        id={person.new_id}\n        title={person.name}\n        key={`p-${person.new_id}`}\n        itemProp=\"performer\"\n        // @ts-expect-error\n        // ^~~~~~~~~~~~~~~^ error: \"Type 'string' is not assignable to type 'boolean | undefined' (2322)\"\n        itemScope=\"https://schema.org/Person\"\n      >\n        {headshot}\n        <div className=\"details\">\n          {person_name}\n          <div className=\"info\">{affiliations}</div>\n        </div>\n      </div>\n    )\n  }\n  if (type === \"dialogue\") {\n    return (\n      <span\n        className={`speaker person ${hasImg}`}\n        id={person.new_id}\n        key={`p-${person.new_id}`}\n        itemProp=\"performer\"\n        // @ts-expect-error\n        // ^~~~~~~~~~~~~~~^ error: \"Type 'string' is not assignable to type 'boolean | undefined' (2322)\"\n\n        itemScope=\"https://schema.org/Person\"\n      >\n        {headshot}\n        <div className=\"details\">\n          {person_name}\n          <div className=\"info\">\n            {affiliations}\n            {twitter}\n            {website}\n            {bio_link}\n          </div>\n        </div>\n      </span>\n    )\n  }\n  if (type === \"speaker\") {\n    return (\n      <span\n        className={`speaker person ${hasImg}`}\n        id={person.new_id}\n        key={`p-${person.new_id}`}\n        itemProp=\"performer\"\n        // @ts-expect-error\n        // ^~~~~~~~~~~~~~~^ error: \"Type 'string' is not assignable to type 'boolean | undefined' (2322)\"\n\n        itemScope=\"https://schema.org/Person\"\n      >\n        {headshot}\n        <div className=\"details\">\n          {person_name}\n          <div className=\"info\">\n            {affiliations}\n            {twitter}\n            {website}\n          </div>\n        </div>\n        {person_bio}\n      </span>\n    )\n  }\n  if (type !== \"dialogue-index\" && type !== \"dialogue\") {\n    return (\n      <div\n        className={`person ${hasImg}`}\n        id={person.new_id}\n        key={`p-${person.new_id}`}\n        itemProp=\"performer\"\n        // @ts-expect-error\n        // ^~~~~~~~~~~~~~~^ error: \"Type 'string' is not assignable to type 'boolean | undefined' (2322)\"\n\n        itemScope=\"https://schema.org/Person\"\n      >\n        {headshot}\n        <div className=\"details\">\n          {person_name}\n          <div className=\"info\">\n            {affiliations}\n            {date_span}\n            {twitter}\n            {website}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Person\n","import React from \"react\"\n\nexport type SupporterComponentProps = {\n  data: {\n    website: string\n    name: string\n    slug: string\n    type: string\n  }\n}[]\n\ninterface SupporterListProps {\n  supporters: SupporterComponentProps\n  type: string\n}\n\nconst SupporterList = ({ supporters, type }: SupporterListProps) => {\n  const title =\n    supporters.length > 1\n      ? `${type.charAt(0).toUpperCase() + type.slice(1)}s`\n      : type.charAt(0).toUpperCase() + type.slice(1)\n  const types = `${type}s`\n\n  return (\n    <div className={`supporters ${types}`}>\n      <h2>{title}</h2>\n      <ul>\n        {supporters.map(_s => {\n          const s = _s.data\n          const umd =\n            s.slug !== \"umdlib\" && s.type === \"Internal\"\n              ? \"University of Maryland \"\n              : \"\"\n          const supporter_name = s.website ? (\n            s.website.startsWith(\"http\") ? (\n              <a\n                href={s.website}\n                title={s.name}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {umd}\n                {s.name}\n              </a>\n            ) : (\n              <a\n                href={`http://${s.website}`}\n                title={s.name}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {umd}\n                {s.name}\n              </a>\n            )\n          ) : (\n            s.name\n          )\n          return (\n            <li id={s.slug} className={s.type.toLowerCase()}>\n              {supporter_name}\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default SupporterList\n\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport EventTime from \"../components/event-time\"\nimport Person, { PersonComponentProps } from \"../components/person\"\n// import TaxonomyList from '../components/taxonomy-list'\nimport SupporterList, {\n  SupporterComponentProps,\n} from \"../components/supporter-list\"\n\nimport \"./event.css\"\nimport \"./dialogue.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\ninterface DialogueProps {\n  pageContext: NonNullable<\n    Queries.PageDialogueQuery[\"allAirtableEvents\"][\"nodes\"][number][\"data\"]\n  >\n}\n\n// TODO: Simplify / Aggregate with types from gatsby-node.\ntype ExtendedSpeakerData = NonNullable<\n  NonNullable<\n    NonNullable<\n      Queries.PageDialogueQuery[\"allAirtableEvents\"][\"nodes\"][number][\"data\"]\n    >[\"speakers\"]\n  >[number]\n> & {\n  headshot: NonNullable<\n    Queries.PageDialogueIndexQuery[\"allAirtablePeople\"][\"nodes\"][number][\"data\"]\n  >[\"headshot\"]\n  bio: NonNullable<\n    NonNullable<\n      NonNullable<\n        NonNullable<\n          Queries.PageDialogueQuery[\"allAirtableIdentities\"][\"nodes\"][number][\"data\"]\n        >[\"linked_person\"]\n      >[number]\n    >[\"data\"]\n  >[\"bio\"]\n}\n\nconst Dialogue = ({ pageContext: item }: DialogueProps) => {\n  const subtitle = item.talk_subtitle ? (\n    <h2 className=\"subtitle\">{item.talk_subtitle}</h2>\n  ) : (\n    \"\"\n  )\n  const title = (\n    <h1 className=\"title\" itemProp=\"name\">\n      {item.talk_title || item.event_title}\n    </h1>\n  )\n\n  const headerImage = item.image ? (\n    <GatsbyImage\n      image={item.image.localFiles?.[0]?.childImageSharp?.gatsbyImageData!}\n      alt={item.event_title || \"\"}\n      className=\"event-image\"\n    />\n  ) : null\n\n  // const header = item.image\n  //   ? <GatsbyImage\n  //     image={item.image.localFiles[0].childImageSharp.gatsbyImageData}\n  //     alt={item.event_title}\n  //     className=\"event-image\"\n  //   /> : <div className=\"header\">{title}{subtitle}</div>\n\n  const description = item.description ? (\n    <div\n      className=\"description\"\n      dangerouslySetInnerHTML={{\n        __html: item.description.childMarkdownRemark?.html || \"\",\n      }}\n    />\n  ) : (\n    \"\"\n  )\n\n  let speakers_list = null\n  let speakers = null\n  let speaker_bios_list = null\n  let speaker_bios: JSX.Element | undefined\n  let speaker_bio: JSX.Element | undefined\n  const speakers_data = item.speakers ? item.speakers : []\n  if (speakers_data.length > 0) {\n    speakers_list = speakers_data.map((p, i) => {\n      return (\n        <Person\n          key={`p${i}`}\n          person={p?.data as unknown as PersonComponentProps}\n          type=\"dialogue\"\n        />\n      )\n    })\n    speakers = (\n      <div className=\"speakers\">\n        <h2 className=\"hidden\">Speakers</h2>\n        {speakers_list}\n      </div>\n    )\n    speaker_bios_list = speakers_data.map(_b => {\n      const b = _b?.data as unknown as ExtendedSpeakerData\n      if (b?.bio) {\n        speaker_bio = (\n          <div\n            dangerouslySetInnerHTML={{\n              __html: b.bio?.childMarkdownRemark?.html || \"\",\n            }}\n            id={b.data?.slug!}\n            className=\"speaker-bio\"\n          />\n        )\n      }\n      return <>{speaker_bio}</>\n    })\n    speaker_bios = speaker_bios_list ? (\n      <div className=\"bios\">\n        <h2 className=\"hidden\">Speaker Bios</h2>\n        {speaker_bios_list}\n      </div>\n    ) : undefined\n  }\n\n  const sponsors = item.sponsors ? (\n    <SupporterList\n      supporters={item.sponsors as SupporterComponentProps}\n      type=\"sponsor\"\n    />\n  ) : (\n    \"\"\n  )\n  const partners = item.partners ? (\n    <SupporterList\n      supporters={item.partners as SupporterComponentProps}\n      type=\"partner\"\n    />\n  ) : (\n    \"\"\n  )\n\n  let links_list = null\n  let links = null\n  let link_name = null\n  if (item.linked_links) {\n    links_list = item.linked_links.map(_l => {\n      const l = _l?.data!\n      if (l.url) {\n        link_name = l.url.startsWith(\"http\") ? (\n          <a href={l.url} rel=\"noreferrer\">\n            {l.title}\n          </a>\n        ) : (\n          <a\n            href={`http://${l.url}`}\n            title={l.title || \"\"}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {l.title}\n          </a>\n        )\n      } else {\n        link_name = l.title\n      }\n      return <li className={l.type || undefined}>{link_name}</li>\n    })\n    links = (\n      <div className=\"links\">\n        <h2>Resources</h2>\n        <ul>{links_list}</ul>\n      </div>\n    )\n  }\n\n  // const disciplines = item.disciplines\n  //   ? <TaxonomyList terms={item.disciplines.data} type=\"disciplines\" />\n  //   : ''\n\n  // const methods = item.methods\n  //   ? <TaxonomyList terms={item.methods.data} type=\"methods\" />\n  //   : ''\n\n  const iconVideo = <FontAwesomeIcon icon=\"play-circle\" />\n  const video_id = item.video_id ? item.video_id : \"\"\n  const video_link = video_id ? (\n    <div className=\"video-link\">\n      <a\n        className=\"button\"\n        href={`https://vimeo.com/${video_id}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {iconVideo} Watch Dialogue Video\n      </a>\n    </div>\n  ) : (\n    \"\"\n  )\n\n  const livestream = item.livestream ? (\n    <div className=\"livestream-link\">\n      <a\n        className=\"button\"\n        href={item.livestream}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Watch Livestream\n      </a>\n    </div>\n  ) : (\n    \"\"\n  )\n\n  const video = video_id ? (\n    <div className=\"video\">\n      <h2>Media</h2>\n      <div className=\"video-wrapper\">\n        <iframe\n          title={`${title} Video`}\n          src={`https://player.vimeo.com/video/${video_id}?color=afbc21&title=0&byline=0&portrait=0`}\n          frameBorder=\"0\"\n          allow=\"autoplay; fullscreen; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      </div>\n      <script src=\"https://player.vimeo.com/api/player.js\"></script>\n    </div>\n  ) : (\n    \"\"\n  )\n\n  const dd_info = (\n    <section className=\"dd-info\">\n      <p>\n        A continuously updated schedule of talks is also available on the{\" \"}\n        <Link to=\"../\">Digital Dialogues</Link> page.\n      </p>\n      <p>\n        Unable to attend the events in person? Archived podcasts can be found on\n        the MITH website, and you can follow our Digital Dialogues Twitter\n        account <a href=\"https://twitter.com/@digdialog\">@digdialog</a> as well\n        as the Twitter hashtag{\" \"}\n        <a href=\"https://twitter.com/hashtag/#mithdd\">#mithdd</a> to keep up\n        with live tweets from our sessions. Viewers can watch the live stream as\n        well.\n      </p>\n      <p>\n        All talks free and open to the public. Attendees are welcome to bring\n        their own lunches.\n      </p>\n      <p>\n        Contact: MITH (<a href=\"http://mith.umd.edu\">mith.umd.edu</a>,{\" \"}\n        <a href=\"mailto:mith@umd.edu\">mith@umd.edu</a>, 301.405.8927).\n      </p>\n    </section>\n  )\n\n  return (\n    <Layout>\n      <SEO title={item.event_title || \"\"} />\n      <div className=\"page-dialogue\">\n        <section\n          className=\"dialogue event\"\n          itemProp=\"event\"\n          itemScope\n          itemType=\"https://schema.org/Event\"\n        >\n          <div className=\"header\">\n            {headerImage}\n            {title}\n            {subtitle}\n          </div>\n          <div className=\"content\">\n            <div className=\"metadata\">\n              <EventTime\n                start={parseInt(item.start!)}\n                end={parseInt(item.end!)}\n              />\n              <div itemProp=\"location\" className=\"location\">\n                {item.location}\n              </div>\n            </div>\n            {speakers}\n            {description}\n            {speaker_bios}\n            {video}\n          </div>\n          <div className=\"sidebar\">\n            {sponsors}\n            {partners}\n            {video_link}\n            {livestream}\n            {links}\n          </div>\n        </section>\n        {dd_info}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Dialogue\n"],"names":["_ref","person","type","pageLocation","isStaff","group_type","includes","slug","affiliations","person_name","React","Link","className","id","new_id","key","to","name","title","date_span","_aff","aff","data","start","end","map","person_title","person_institution","person_dept","department","institution","Fragment","twitter","headshot","website","hasImg","iconTwitter","FontAwesomeIcon","icon","href","target","rel","headshotData","localFiles","childImageSharp","GatsbyImage","image","gatsbyImageData","alt","src","url","style","objectFit","bio_link","bio","childMarkdownRemark","person_bio","dangerouslySetInnerHTML","__html","html","website_url","startsWith","itemProp","itemScope","supporters","length","charAt","toUpperCase","slice","types","_s","s","umd","supporter_name","toLowerCase","_item$image$localFile","_item$image$localFile2","_item$image$localFile3","_item$description$chi","pageContext","item","subtitle","talk_subtitle","talk_title","event_title","headerImage","description","speaker_bios","speaker_bio","speakers_list","speakers","speaker_bios_list","speakers_data","p","i","Person","_b","b","_b$bio","_b$bio$childMarkdownR","_b$data","undefined","sponsors","SupporterList","partners","links_list","links","link_name","linked_links","_l","l","iconVideo","video_id","video_link","livestream","video","frameBorder","allow","allowFullScreen","dd_info","Layout","SEO","itemType","EventTime","parseInt","location"],"sourceRoot":""}