{"componentChunkName":"component---src-templates-post-tsx","path":"/news/future-accessibility-braillesc-org-braillerise/","result":{"data":{"postInfo":{"nodes":[{"data":{"slug":"future-accessibility-braillesc-org-braillerise","author_name":"Jennifer Guiliano","post_title":"The Future of Accessibility with BrailleSC.org and BrailleRISE","post_date":"December 4, 2013"}}]}},"pageContext":{"slug":"future-accessibility-braillesc-org-braillerise","html":"<p>Making the Digital Humanities More Open, a level 2 Digital Humanities Start Up grant funded by the National Endowment for the Humanities, ended its work earlier this fall. A partnership between the University of South Carolina Upstate and the University of Maryland's Maryland Institute for Technology in the Humanities (MITH), the project featured a team of scholars including George Williams and Tina Herzberg of USC Upstate, Jim Smith, Amanda Visconti, Kirsten Keister, and myself (MITH), as well as Cory Bohon (independent scholar).</p>\n<p>Our goal for the project was to design, develop, and deploy a WordPress‐based accessibility tool to create Braille content for end-users who are blind or have low vision. Over the last several decades, scholars have developed standards for how best to create, organize, present, and preserve digital information so that future generations of teachers, students, scholars, and librarians may still use it. What has remained neglected for the most part, however, are the needs of people with disabilities. As a result, many of the otherwise most valuable digital resources are useless for people who are blind or have low vision with assistive devices like screen readers and refreshable Braille displays. Our premise was “is there a way to directly manipulate WordPress text into Braille without having to go through a separate device?”</p>\n<p>So we set out to create a free and easy‐to‐use plugin for WordPress that creates Braille texts from WordPress posts, allowing any WordPress site to share the products of their text‐based projects with this often‐neglected audience of readers. Originally, we planned to extend the use of Anthologize—a free and open source plugin for WordPress that currently translates any RSS text into PDF, ePub, HTML, or TEI—to include the conversion of text to Braille. Yet, as we began our work, it became apparent that it would be far more efficient to begin by creating a direct WordPress plugin that could be included in core application releases that could be supplemented by the Anthologize-enabled plugin.</p>\n<p>The WordPress plugin consists of two components: 1) the plugin itself which works natively with any WordPress installation with the plugin activated and 2) extending the current Anthologize plugin to provide SimBraille and embossable forms of Braille translations as well as the pre-existing document types available via anthologize (PDF, ePUB, TEI). We can do this via a simple RESTful service providing the English to Braille translation utilizing the LibLouis open source software that provides a Braille translation library. To make it as useable as possible, the plugin can be configured to use either a locally installed version of the LibLouis software or a remote server that can be made available from the cloud. We’ve constructed an Amazon Machine Image for use by anyone who wishes to have a remote server loaded with LibLouis up and running for their project in a low-cost option. This will be particularly useful for teachers who can’t load software in their computer labs, users who might be using different machines to develop their site that do not all have access to the local installation, and instructors who travel between schools and classes.</p>\n<p>The RESTful service is written in Ruby as a Sinatra application (<a href=\"http://www.sinatrarb.com/\">http://www.sinatrarb.com/</a>). Because Sinatra is built on Rack (<a href=\"http://rack.github.io/\">http://rack.github.io/</a>), any of the available Rack middleware can be used to provide authentication, authorization, or other services. What this means is that a school district or institution could open up a cloud service for all its teachers without much effort. They’d only need to provide their login credentials on the machine they are using and the service would be up and running in minutes. In our test deployment, we added a caching web server between the WordPress site and the Sinatra service to make it easier for users to load and interact with the service.</p>\n<p>These two components fulfil the goals of the grant: providing a plugin that can create Braille translations of texts organized through Anthologize. Long term though, I’ve got some ideas about what is going to come next.</p>\n<p>We’ve already started on the most preliminary development. We’ve just recently launched a private beta version of a curriculum for Braille training in partnership with Tina Herzberg and her colleague Penny Rosenblum at the University of Arizona. When we were working on Making the Digital Humanities More Open, Tina talked about how great it would be to be able to extend our digital Braille work to classrooms. They’d just started a grant to create large scale curricular materials to train people in Braille literacy. That project, Braille RISE, began a few months ago. We’ve deployed a Moodle instance (an open source content management service for teaching and learning) and created a Braille Short Code filter that allows Tina and Penny to render Braille in the Moodle instance. For example, by using [SimBraille] and pair, we can transform 34 into the appropriate Braille cells. <img src=\"https://lh4.googleusercontent.com/R0Li2KZx6G8JOpZWnAyeD6rtsO-ltVaF-K5lYzHt1_qI63WQr2mrUQ3F9YFa3yQKNvY7fYO892lqOkJvIglOaAaxg8M9te457yUuBevxg6DYcY3cJSzcLGLAXA\" alt=\"\"></p>\n<p>What this means is that they don’t have to insert pictures or use video to show the correct Braille layout. Nor, by the way, do they have to use the six-key keyboard entry system that most Braille users use to render the cells. It all works in plain-text.</p>\n<p>Our next stage will, we hope, allow us to round trip the Braille. Right now, for students to answer the questions correctly in Braille, we give them multiple choice answers. We’d like to create an input option where students could directly enter Braille using six key or even a refreshable Braille display to enter long form answers. That would then translate to plain text for the instructors so that they could have automated answer corrections.</p>\n<p>Along the way, we are also hoping to round out one more area of this project that is tied to our other group project, Accessible Future. When we were building the WordPress plugin and the Moodle filter, it was readily apparent that there is a need for simple WordPress themes that are entirely accessible on both the front end (the theme) and the backend (the dashboard). Our plan for spring is to begin working on a custom set of themes that would natively integrate accessibility plugins. This would shortcut so many steps for users who right now have to sort through the various plugins, install, activate, and configure their settings. We are hoping to have plugins like the Braille plugin, Access Keys, WP-Accessibility and others embedded within the themes. And once we’ve conquered that, we want to take on the backend so that it is fully accessible for blind, low-vision, cognitive, and auditorily disabled users.</p>\n<p>Accessibility fundamentally enables us all and our hope is that these project products and future deliverables will enable more digital humanists to not just meet accessibility standards but innovate new technologies that are fully accessible to all users.</p>","fileAbsolutePath":"/home/runner/work/mith-static/mith-static/src/news/future-accessibility-braillesc-org-braillerise.md"}},"staticQueryHashes":["196133661","2857345991"],"slicesMap":{}}