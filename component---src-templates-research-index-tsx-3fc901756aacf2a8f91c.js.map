{"version":3,"file":"component---src-templates-research-index-tsx-3fc901756aacf2a8f91c.js","mappings":"sIA+BA,IArBkBA,IAAsC,IAArC,MAAEC,EAAK,KAAEC,GAAsBF,EAChD,OACEG,EAAAA,cAAA,WAASC,UAAU,mBACjBD,EAAAA,cAAA,MAAIC,UAAU,cACXC,MAAMC,KAAK,CAAEC,OAAQN,IAAS,CAACO,EAAGC,IACjCN,EAAAA,cAAA,MAAIC,UAAU,YAAYM,IAAK,KAAKD,KAClCN,EAAAA,cAACQ,EAAAA,GAAI,CACHC,gBAAgB,SAChBR,UAAU,YACVM,IAAK,oBAAoBD,EAAI,IAC7BI,GAAI,IAAIX,KAAc,IAANO,EAAU,GAAKA,EAAI,KAElCA,EAAI,OAKL,C,6FC+Gd,UA1HsBT,IAAkC,IAAjC,KAAEc,GAA0Bd,EACjD,MAAMe,EAAQD,EAAKE,yBAAyBC,MACtCC,EAAcb,MAAMC,KAAKS,GAAOI,MACnCC,IAAqE,IAAAC,EAAA,MAChD,UAApBD,SAAO,QAANC,EAADD,EAAGN,YAAI,IAAAO,OAAN,EAADA,EAASC,SAAqB,EAAI,CAAC,IAEjCC,EAAYT,EAAKE,yBAAyBQ,SAASD,UAEzD,OACEpB,EAAAA,cAACsB,EAAAA,EAAM,KACLtB,EAAAA,cAACuB,EAAAA,EAAG,CAACC,MAAM,kBACXxB,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,WAASC,UAAU,kBACjBD,EAAAA,cAAA,MAAIC,UAAU,cAAa,YAC1Bc,EAAYU,KAAIC,IAAS,IAAAC,EACxB,MAAMC,EAAOF,EAAMf,KACbkB,EAAO,aAAeD,EAAKC,KAAO,IAWxC,IACIC,EADAC,EAAU,GAEVP,EACFxB,EAAAA,cAAA,MAAIC,UAAU,SACZD,EAAAA,cAACQ,EAAAA,GAAI,CAACE,GAAImB,GAAOD,EAAKJ,QAGV,IAAAQ,EAAAC,EAAAC,EAiBMC,EAjBlBP,EAAKE,QACPA,EACE9B,EAAAA,cAACoC,EAAAA,EAAW,CACVN,MACuB,QADlBE,EACHJ,EAAKE,MAAMO,kBAAU,IAAAL,GAAK,QAALC,EAArBD,EAAwB,UAAE,IAAAC,GAAiB,QAAjBC,EAA1BD,EAA4BK,uBAAe,IAAAJ,OAAtB,EAArBA,EACIK,gBAENC,IAAKZ,EAAKJ,OAAS,GACnBvB,UAAU,mBAGduB,EACExB,EAAAA,cAACQ,EAAAA,GAAI,CAACE,GAAImB,EAAM5B,UAAU,UACvB6B,IAIHF,EAAKa,cACPV,EAA8C,QAAvCI,EAAGP,EAAKa,YAAYC,2BAAmB,IAAAP,OAAA,EAApCA,EAAsCJ,SAGlD,MAAMY,EAAgB,QAAVhB,EAAGC,EAAKgB,UAAE,IAAAjB,OAAA,EAAPA,EAASkB,QAAQ,KAAM,KAEtC,OACE7C,EAAAA,cAAA,WACEC,UAAU,0BACVM,IAAK,YAAYqB,EAAKgB,KACtBA,GAAID,GAEHnB,EAIDxB,EAAAA,cAAA,OAAKC,UAAU,gBAAgB8B,GACvB,KAIhB/B,EAAAA,cAAC8C,EAAAA,EAAS,CAAChD,MAAOsB,EAAWrB,KAAK,cAE7B,C","sources":["webpack://mith-static/./src/components/paginator.tsx","webpack://mith-static/./src/templates/research-index.tsx"],"sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport \"./paginator.css\"\n\ninterface PaginatorProps {\n  count: number\n  path: string\n}\n\nconst Paginator = ({ count, path }: PaginatorProps) => {\n  return (\n    <section className=\"pagination-wrap\">\n      <ul className=\"pagination\">\n        {Array.from({ length: count }, (_, i) => (\n          <li className=\"page-link\" key={`pa${i}`}>\n            <Link\n              activeClassName=\"active\"\n              className=\"page-link\"\n              key={`pagination-number${i + 1}`}\n              to={`/${path}/${i === 0 ? \"\" : i + 1}`}\n            >\n              {i + 1}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Paginator\n\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Paginator from \"../components/paginator\"\n// import ResearchTime from '../components/research-time'\n\nimport \"./post-index.css\"\nimport \"./research-index.css\"\n\ninterface ResearchIndexProps {\n  data: Queries.ResearchQuery\n}\n\nconst ResearchIndex = ({ data }: ResearchIndexProps) => {\n  const items = data.allAirtableResearchItems.nodes\n  const sortedItems = Array.from(items).sort(\n    (a: Queries.ResearchQuery[\"allAirtableResearchItems\"][\"nodes\"][number]) =>\n      a?.data?.active === \"TRUE\" ? -1 : 1,\n  )\n  const pageCount = data.allAirtableResearchItems.pageInfo.pageCount\n\n  return (\n    <Layout>\n      <SEO title=\"MITH Research\" />\n      <div className=\"page-research\">\n        <section className=\"posts research\">\n          <h1 className=\"page-title\">Research</h1>\n          {sortedItems.map(_item => {\n            const item = _item.data!\n            const slug = \"/research/\" + item.slug + \"/\"\n            // const active = item.active === 'TRUE' ? <span className=\"pill\">Active</span> : ''\n            // const start = item.month_start ? `${item.year_start}-${item.month_start}` : item.year_start\n            // let end: string | number\n            // if (item.year_end) {\n            //   end = item.month_end\n            //     ? `${item.year_end}-${item.month_end}`\n            //     : item.year_end\n            // }\n            // const dates = <ResearchTime start={start} end={end} active={item.active} />\n\n            let excerpt = \"\"\n            let image: JSX.Element | undefined\n            let title = (\n              <h2 className=\"title\">\n                <Link to={slug}>{item.title}</Link>\n              </h2>\n            )\n            if (item.image) {\n              image = (\n                <GatsbyImage\n                  image={\n                    item.image.localFiles?.[0]?.childImageSharp\n                      ?.gatsbyImageData!\n                  }\n                  alt={item.title || \"\"}\n                  className=\"research-image\"\n                />\n              )\n              title = (\n                <Link to={slug} className=\"header\">\n                  {image}\n                </Link>\n              )\n            }\n            if (item.description) {\n              excerpt = item.description.childMarkdownRemark?.excerpt!\n            }\n\n            const itemId = item.id?.replace(/-/g, \"_\")\n\n            return (\n              <article\n                className=\"post research-item-post\"\n                key={`research-${item.id}`}\n                id={itemId}\n              >\n                {title}\n                {/* <div className=\"meta\">\n                  {dates}\n                </div> */}\n                <div className=\"post-excerpt\">{excerpt}</div>\n              </article>\n            )\n          })}\n        </section>\n        <Paginator count={pageCount} path=\"research\" />\n      </div>\n    </Layout>\n  )\n}\n\n// TODO: We don't seem to be able to sort on both year_start and active any longer.\n// Sorting on the client as a result.\nexport const query = graphql`\n  query Research($skip: Int!, $limit: Int!) {\n    allAirtableResearchItems(\n      limit: $limit\n      skip: $skip\n      sort: { data: { year_start: DESC } }\n    ) {\n      nodes {\n        data {\n          id\n          title\n          slug\n          year_start\n          year_end\n          month_end\n          month_start\n          active\n          description {\n            childMarkdownRemark {\n              excerpt(pruneLength: 250)\n            }\n          }\n          image {\n            localFiles {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 500\n                  quality: 100\n                  backgroundColor: \"rgba(255,255,255,0)\"\n                )\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        pageCount\n      }\n    }\n  }\n`\n\nexport default ResearchIndex\n"],"names":["_ref","count","path","React","className","Array","from","length","_","i","key","Link","activeClassName","to","data","items","allAirtableResearchItems","nodes","sortedItems","sort","a","_a$data","active","pageCount","pageInfo","Layout","SEO","title","map","_item","_item$id","item","slug","image","excerpt","_item$image$localFile","_item$image$localFile2","_item$image$localFile3","_item$description$chi","GatsbyImage","localFiles","childImageSharp","gatsbyImageData","alt","description","childMarkdownRemark","itemId","id","replace","Paginator"],"sourceRoot":""}