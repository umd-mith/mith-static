{"version":3,"file":"component---src-pages-people-past-js-1adcaeb8168de7f49b72.js","mappings":"wJAmGA,UA5FuBA,IAAe,IAAd,KAAEC,GAAMD,EAyB9B,OACEE,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,gBACXH,EAAAA,cAAA,OAAKI,UAAU,oBACbJ,EAAAA,cAAA,WAASI,UAAU,iBACjBJ,EAAAA,cAAA,MAAII,UAAU,0BAAyB,gBAIvCL,EAAKM,OAAOC,MAAMC,QAAOC,GAAKA,EAAEC,WAAWC,WAAW,UACrDC,MAAK,CAACC,EAAGC,IACDd,EAAKe,OAAOC,MAAMR,QAAOC,GAAKA,EAAET,KAAKiB,aAAeJ,EAAEH,aAAY,GAAGV,KAAKY,KAAOZ,EAAKe,OAAOC,MAAMR,QAAOC,GAAKA,EAAET,KAAKiB,aAAeH,EAAEJ,aAAY,GAAGV,KAAKY,OACnKM,KAAIZ,GAEDL,EAAAA,cAAA,WAASkB,GAAIb,EAAOI,WAAWU,cAAcC,QAAQ,IAAK,KAAMhB,UAAU,gBACxEJ,EAAAA,cAAA,UAAKK,EAAOI,YACXJ,EAAOU,MAAME,KAAII,GAvChC,SAAoBA,GAClB,IAAIC,EAAaD,EAAOE,mBAAqB,GAC7C,OACAvB,EAAAA,cAAA,WAASI,UAAU,SAASc,GAAIG,EAAOG,OAAQrB,MAAOkB,EAAOI,KAAMC,IAAK,KAAKL,EAAOG,UAClFxB,EAAAA,cAAA,MAAII,UAAU,QAAQiB,EAAOI,MAC7BzB,EAAAA,cAAA,OAAKI,UAAU,WACZkB,EACAX,MAAK,CAACC,EAAGC,IAAMD,EAAEb,KAAK4B,MAAQd,EAAEd,KAAK4B,QACrCV,KAAIW,IACH,MAAMC,EAAMD,EAAS7B,KAAK4B,QAAUC,EAAS7B,KAAK8B,IAAM,GAAK7B,EAAAA,cAAA,QAAMI,UAAU,OAAOwB,EAAS7B,KAAK8B,KAClG,OAAQ7B,EAAAA,cAAA,WAASI,UAAU,WAAWc,GAAIU,EAAS7B,KAAKmB,GAAIQ,IAAK,KAAKE,EAAS7B,KAAKmB,MAClFlB,EAAAA,cAAA,QAAMI,UAAU,SAASwB,EAAS7B,KAAKI,OACvCH,EAAAA,cAAA,QAAMI,UAAU,aACdJ,EAAAA,cAAA,QAAMI,UAAU,SAASwB,EAAS7B,KAAK4B,OACtCE,GAEK,KAKlB,CAmBuBC,CAAWT,EAAOtB,YAO9B,C","sources":["webpack://mith-static/./src/pages/people-past.js"],"sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './people.css'\n\nconst PeoplePastPage = ({ data }) => {\n  \n  function makePerson(person) {\n    let identities = person.linked_identities || []\n    return (\n    <article className=\"person\" id={person.new_id} title={person.name} key={`p-${person.new_id}`}>\n      <h3 className=\"name\">{person.name}</h3>\n      <div className=\"details\">\n        {identities\n        .sort((a, b) => a.data.start - b.data.start)\n        .map(identity => {\n          const end = identity.data.start === identity.data.end ? '' : <span className=\"end\">{identity.data.end}</span>\n          return (<article className=\"identity\" id={identity.data.id} key={`i-${identity.data.id}`}>\n            <span className=\"title\">{identity.data.title}</span>\n            <span className=\"date-span\">\n              <span className=\"start\">{identity.data.start}</span>\n              {end}\n            </span>   \n          </article>)\n        })}     \n      </div>\n    </article>\n    )    \n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Past People\" />\n      <div className=\"page-past-people\">\n        <section className=\"leader hidden\">\n          <h1 className=\"page-title text-hidden\">Past People</h1>\n        </section>\n        {\n          // Sort the people groups in the order specified by the `sort` field in the `allAirtableGroups` data.\n          data.people.group.filter(g => g.fieldValue.startsWith('Past'))\n          .sort((a, b) => {\n            return data.groups.nodes.filter(g => g.data.group_name === a.fieldValue)[0].data.sort - data.groups.nodes.filter(g => g.data.group_name === b.fieldValue)[0].data.sort})\n          .map(people => {\n            return (\n              <section id={people.fieldValue.toLowerCase().replace(' ', '_')} className=\"people-group\">\n                <h2>{people.fieldValue}</h2>\n                {people.nodes.map(person => {\n                  return makePerson(person.data)\n                })}\n              </section>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query PeoplePastQuery {\n    people: allAirtablePeople(\n      filter: {data: {group_type: {regex: \"/Past/\"}}}\n      sort: {data: {name: ASC}}\n    ) {\n      group(field: {data: {people_groups: {data: {group_name: SELECT}}}}) {\n        fieldValue\n        nodes {\n          data {\n            name\n            linked_identities {\n              data {\n                title\n                start\n                end\n              }\n            }\n            id\n            new_id\n            people_groups {\n              data {\n                group_name\n              }\n            }\n          }\n        }\n      }\n    }\n    groups: allAirtableGroups {\n      nodes {\n        data {\n          sort\n          group_name\n        }\n      }\n    }\n  }\n`\n\nexport default PeoplePastPage"],"names":["_ref","data","React","Layout","SEO","title","className","people","group","filter","g","fieldValue","startsWith","sort","a","b","groups","nodes","group_name","map","id","toLowerCase","replace","person","identities","linked_identities","new_id","name","key","start","identity","end","makePerson"],"sourceRoot":""}